apiVersion: v1
data:
  default.conf: |
          server {
                  listen  80 default_server;
                  listen  [::]:80 default_server ipv6only=on;
                  server_name saurabh9495.org;
                  return  301 https://saurabh9495.org$request_uri;
          }

          server {
                  listen 80;
                  listen 443 ssl;
                  server_name jira2.fidelize.com.br;
                  return 301 https://saurabh9495.org$request_uri;

                	ssl_certificate      /etc/nginx/cert/tls.crt;
                	ssl_certificate_key  /etc/nginx/cert/tls.key;

                	ssl_session_timeout 1d;
                  ssl_session_cache shared:SSL:50m;
                  ssl_session_tickets off;


                  # modern configuration. tweak to your needs.
                  ssl_protocols TLSv1.2;
                  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
                  ssl_prefer_server_ciphers on;

                  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
                  add_header Strict-Transport-Security max-age=15768000;

                  # OCSP Stapling ---
                  # fetch OCSP records from URL in ssl_certificate and cache them
                  ssl_stapling on;
                  ssl_stapling_verify on;
          }

          server {
              	  listen 443 ssl http2;
                  listen [::]:443 ssl http2;
                	server_name saurabh9495.org;     # e.g., server_name source.example.com;
                	server_tokens off;     # don't show the version number, a security best practice

                	ssl_certificate      /etc/nginx/cert/tls.crt;
                	ssl_certificate_key  /etc/nginx/cert/tls.key;

                	ssl_session_timeout 1d;
                  ssl_session_cache shared:SSL:50m;
                  ssl_session_tickets off;


                  # modern configuration. tweak to your needs.
                  ssl_protocols TLSv1.2;
                  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
                  ssl_prefer_server_ciphers on;

                  # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
                  add_header Strict-Transport-Security max-age=15768000;

                  # OCSP Stapling ---
                  # fetch OCSP records from URL in ssl_certificate and cache them
                  ssl_stapling on;
                  ssl_stapling_verify on;

                  location / {
                      proxy_set_header X-Forwarded-Host $host;
                      proxy_set_header X-Forwarded-Server $host;
                      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                      proxy_pass http://localhost:8081/;
                      client_max_body_size 10M;
                  }
          }

kind: ConfigMap
metadata:
  name: jira-nginx-conf
